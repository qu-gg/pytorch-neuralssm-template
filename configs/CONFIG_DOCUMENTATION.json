{
  // File: CONFIG_DOCUMENTATION.JSON
  // Description: not a runnable .json file, but a description of the arguments the model can take in and
  // and what the default parameters and types are for each.

  // Experiment ID and Checkpoint to Load
  "exptype": "str (default=testing): experiment folder name",
  "ckpt_path": "str (default=None): checkpoint to resume training from",
  "gpus": "list (default=[0]): which gpu devices to use",

  // Defining which model and model version to use
  "model": "str (default=none): choice of latent dynamics function",

  // Metrics to evaluate on
  "metrics": "list (default=['reconstruction_mse']): which metrics to use",

  // ODE Integration parameters
  "integrator": "str (default=rk4): which ODE integrator to use",
  "integrator_params": "dict (default={'step_size': 1.0}): ODE integrator options in dictionary format",

  // Dataset-to-use parameters
  "dataset": "str (default=pendulum): dataset folder name",
  "dataset_ver": "str (default=pendulum_12500samples_200steps_dt01): dataset version, which holds .tar files",
  "dataset_percent": "float (default=0.1): percent of the dataset to use",
  "batches_to_save": "int (default=50): how many batches' outputs to output for metrics per epoch",

  // Learning parameters
  "num_epochs": "int (default=100): how many epochs to train over",
  "batch_size": "int (default=32): size of batch",

  // Learning rate parameters
  "learning_rate": "float (default=1e-3): initial learning rate",

  // Input dimensions
  "dim": "int (default=32): dimension of the input data, assuming square images",

  // Network dimensions
  "latent_dim": "int (default=3): size of the latent vector field",
  "latent_act": "string (default=swish): type of activation function in the dynamics function per utils.py",
  "num_layers": "int (default=2): number of layers in the dynamics function",
  "num_hidden": "int (default=128): number of neurons per layer in the dynamics function",
  "num_filt": "int (default=8): number of filters used in the first layer of the CNNs. Multiplies by two per layer.",

  // Z0 inference parameters
  "z_amort": "int (default=5): how many frames of observation given to use in z0 inference",

  // Timesteps to generate out
  "generation_len": "int (default=15): total number of timesteps to generate out and train on (including z_amort)",
  "generation_validation_len": "int (default=30): how many timesteps to generate out in validation metrics"
}